[{"content":" Summary Table HS: Hybrid Storage, OD: Outsourced Decryption, PP: Privacy of Policy, PA: Privacy of Attributes, VDI: Verification of Data Integrity, VAP: Verification of Access Permission, PV: Public verification, SA: Sanitization, RE: Revocation, KS: Keyword Search VT: Verification of Transformation by CS\nPaper HS OD PP PA VDI VAP PV SA RE KS 1 Xiao2022 \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x2705; VAP \u0026#x274c; \u0026#x2705; \u0026#x274c; 2 Zhang2022 \u0026#x2705; \u0026#x274c; \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x2705; VAP \u0026#x274c; \u0026#x274c; \u0026#x274c; 3 Guo2023 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; 4 Li2024 \u0026#x274c;(without CS) \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x2705; both \u0026#x274c; \u0026#x274c; \u0026#x2705; 5 Jiang2024 \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; \u0026#x274c; 6 He2022 \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; 7 Yan2023 \u0026#x274c; \u0026#x2705; \u0026#x2705; \u0026#x2753; \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; 8 Zhao2023 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; 9 Fan2020 \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; 10 Cui2020 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x2705; both \u0026#x274c; \u0026#x274c; \u0026#x274c; 11 Yang2023 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; 12 Gan2023 \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; 13 Hou2024 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x2705; both \u0026#x274c; \u0026#x274c; \u0026#x274c; 14 Jiang2022 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; 15 Guo2023 \u0026#x2705; \u0026#x2705; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x274c; \u0026#x2705; \u0026#x274c; Blockchain Based Multi-Authority Fine-Grained Access Control System With Flexible Revocation Meiyan Xiao , Qiong Huang , Member, IEEE, Ying Miao, Shunpeng Li, and Willy Susilo , Fellow, IEEE; IEEE TRANSACTIONS ON SERVICES COMPUTING (TSC CCF A) 2022\nSummary: This paper first proposed a KP-ABE scheme with Multiple Authorities and Flexible Revocation called MAFR-KP-ABE. After that, the authors combine MAFR-KP-ABE and blockchain to achieve paid data sharing access control.\nSystem model: Hybrid storage Access control: KP-ABE; DU paid the fee to DO on Ethereum to achieve access permission DO encrypts data using a symmetric encryption algorithm and further encrypts the symmetric key with ABE algorithm. DO uploads data ciphertext and key ciphertext to CSP, and then uploads data sharing information on Ethereum (attributes set, hash value of the shared data, location of the shared data in CSP and information about fees). DU pays DO on Ethereum based on data sharing information. Then, DU request decryption keys from Attribute Authorities (AAs). Each AA verifies the payment transaction and sends the decryption key to the DU. DU searches the data according to data sharing information. Anyone can request ciphertext from CSP. Question\u0026#x2753; The ciphertexts must be re-encrypt after user revocation. Algorithm $\\textbf{KeyGen}$ seems modify the public key of the authority. So do they need to re-encrypt the ciphertext every time they run $\\textbf{KeyGen}$? An Expressive Fully Policy-Hidden Ciphertext Policy Attribute-Based Encryption Scheme With Credible Verification Based on Blockchain Zhaoqian Zhang , Jianbiao Zhang , Member, IEEE, Yilin Yuan , and Zheng Li IOT J, 2022 Summary: The signature of data hash value stored on the blockchain. The smart contract process the preverification to verify the access right.\nAccountable Attribute-Based Data-Sharing Scheme Based on Blockchain for Vehicular Ad Hoc Network Zhenzhen Guo , Gaoli Wang , Yingxin Li , Jianqiang Ni, Runmeng Du, and Miao Wang IOT J, 2023\nSummary: The authors mainly solved the key abuse problem. 1) Consortium blockchain maintained by AAs is deployed. The key distribution operation is recorded on the blockchain for verification. 2) They also designed CP-ABE scheme with white-box traceability and efficient user revocation to avoid user key abuse.\nAccess control is executed by semi-honest RSU. RSUs hold user-specific keys for partial decryption. DU direcyly request data from RSU. Then, RSU executes the partial decryption on ciphertext and sends the results to DU.\nUser-uploaded data can be stored in IPFS.\nFlexible and secure access control for EHR sharing based on blockchain Peng Li, Dehua Zhou, Haobin Ma, Junzuo Lai Journal of Systems Architecture, 2024\nSummary: The authors proposed a policy hiding ABKS scheme with online/offline encryption. The $\\textsf{Search}$ algorithm performed on the blockchain, so the public verification of access control is achieved.\nSanIdea: Exploiting Secure Blockchain-Based Access Control via Sanitizable Encryption Peng Jiang , Member, IEEE, Qi Liu, and Liehuang Zhu , Senior Member, IEEE\nIEEE TIFS'2024\nSummary: The authors proposed a sanitizable multi-authority attribute-based encryption scheme (sMABE). Then they proposed SanIdea by integrating the blockchain with SMABE to ensure the correctness of the secret key parts.\nQuestion\u0026#x2753;\nThe authorities store master secret keys on the blockchain. The sanitication only contains randomness process. An Efficient Ciphertext-Policy Attribute-Based Encryption Scheme Supporting Collaborative Decryption With Blockchain Ying He, Haiyan Wang, Yuan Li, Ke Huang, Victor C. M. Leung, Life Fellow, IEEE, F. Richard Yu, Fellow, IEEE, and Zhong Ming, IOT J, 2022\nFor any user group, when the user’s attribute set cannot access the ciphertext alone, the private key of other users in the same group can be used for collaborative decryption with the permission of the data owner.\nPrivate blockchain is responsible for collaborative decryption information transmission (ciphertext) between users.\nAccess control scheme based on blockchain and attribute-based searchable encryption in cloud environment Liang Yan, Lina Ge, Zhe Wang, Guifen Zhang, Jingya Xu \u0026amp; Zheng Hu, Journal of Cloud Computing: Advances, Systems and Applications 2023\nHidden policy ABKS with attribute revocation and blockchain are employed to achieve a distributed fine-grained access control scheme. Data symmetric ciphertexts are stored on IPFS and ABE ciphertexts are stored on the blockchain. Smart contracts execute search algorithm.\nPrivacy of user attributes \u0026#x2753; DO generates attribute key\nERSChain: Towards secure and flexible educational resource sharing using consortium blockchain and revocable ciphertext-policy attribute-based encryption Gang Zhao, Hui He, Bingbing Di, Tong Wu Concurrency and Computation: Practice and Experience 2023 (CCF C)\nThis paper proposed revocable CP-ABE with outsourced decryption for educational resource sharing to relize fine-grained access control. The encrypted data stored on off-chain server. On the blockchain, the hash value for sharing data are recorded.\nA Secure and Verifiable Data Sharing Scheme Based on Blockchain in Vehicular Social Networks Kai Fan , Member, IEEE, Qiang Pan , Kuan Zhang , Member, IEEE, Yuhan Bai, Shili Sun , Hui Li , Member, IEEE, and Yintang Yang , Member, IEEE, IEEE TRANSACTIONS ON VEHICULAR TECHNOLOGY, 2020\nThis paper stores the access policy and hash value of data on the blockchain so that the data user can perform self-certification. The data user retrieves the access policy from the blockchain to check whether their attributes satisfy the access policy. If the check passes, they request the data from the CS. Moreover, the authors design a policy-hiding scheme. However, the policy-hiding scheme does not resist attribute guessing attacks.\nPay as You Decrypt: Decryption Outsourcing for Functional Encryption Using Blockchain Hui Cui , Zhiguo Wan , Xinlei Wei, Surya Nepal ,and Xun Yi TIFS'2020\nThis paper proposed a functional encryption scheme with payable outsourced decryption, which allows anybody to check the correctness of the answer for the outsourcing computation task provided by an untrusted third party. The verification algorithm is executed by the smart contract. However, the verification algorithm needs to re-execute decrypt algorithm. This doesn\u0026rsquo;t make sense\nBlockchain-based multi-authority revocable data sharing scheme in smart grid Xiao-Dong Yang, Ze-Fan Liao, Bin Shu and Ai-Jia Chen Mathematical Biosciences and Engineering, 2023\nThey utilized the multi-authority online/offline ABE with user revocation and blockchain to achieve fine-grained data sharing. The hash value of data is stored on the blockchain for verification of decryption results.\nFine-grained Data Rights Governance in Blockchain-based Cloud-edge Communications Weilin Gan, Mingyang Zhao, Hongchen Guo, Chuan Zhang, Jianan Hong, and Liehuang Zhu IEEE GLOBECOM'23\nThis paper allows the data user to edit the ciphertext by employing chameleon hashes trapdoors.\nBlockchain-based efficient verifiable outsourced attribute-based encryption in cloud Zesen Hou, Jianting Ning, Xinyi Huang, Shengmin Xu, Leo Yu Zhang Computer Standards \u0026amp; Interfaces, 2024\nThis paper based on \u0026ldquo;Pay as You Decrypt\u0026rdquo; and places the generation of the transformation key in KGC, reducing user-side overhead.\nAttribute-Based Encryption With Blockchain Protection Scheme for Electronic Health Records Yu Jiang , Xiaolong Xu , and Fu Xiao IEEE TRANSACTIONS ON NETWORK AND SERVICE MANAGEMENT, 2022\nBy storing the uploaded encrypted data in the blockchain in the form of transaction records, the integrity of the data is guaranteed, which facilitates the traceability of EHR generation. It supports attribute revocation.\nRevocable Blockchain-Aided Attribute-Based Encryption With Escrow-Free in Cloud Storage Yuyan Guo , Zhenhua Lu , Hui Ge , and Jiguo Li IEEE TRANSACTIONS ON CLOUD COMPUTING, 2023\nThis paper proposed a revocable blockchain-aided ABE with escrow-free (BC-ABE-EF) system. The keys are generated between the blockchain and the data user through a secure key issuing protocol, and the blockchain cannot obtain the user’s full key alone.\n","permalink":"https://liang512.github.io/post/research/blockchainaccess_abe/","summary":"\u003c!-- 总表 --\u003e\n\u003ch1 id=\"summary-table\"\u003eSummary Table\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u003cstrong\u003eHS\u003c/strong\u003e: Hybrid Storage, \u003cstrong\u003eOD\u003c/strong\u003e: Outsourced Decryption, \u003cstrong\u003ePP\u003c/strong\u003e: Privacy of Policy,\n\u003cstrong\u003ePA\u003c/strong\u003e: Privacy of Attributes, \u003cstrong\u003eVDI\u003c/strong\u003e: Verification of Data Integrity, \u003cstrong\u003eVAP\u003c/strong\u003e: Verification of Access Permission,\n\u003cstrong\u003ePV\u003c/strong\u003e: Public verification, \u003cstrong\u003eSA\u003c/strong\u003e: Sanitization, \u003cstrong\u003eRE\u003c/strong\u003e: Revocation, \u003cstrong\u003eKS\u003c/strong\u003e: Keyword Search\n\u003cstrong\u003eVT\u003c/strong\u003e: Verification of Transformation by CS\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003chr\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth style=\"text-align: center\"\u003e\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003ePaper\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eHS\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eOD\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003ePP\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003ePA\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eVDI\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eVAP\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003ePV\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eSA\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eRE\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003eKS\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e1\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Xiao2022\"\u003eXiao2022\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eVAP\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e2\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Zhang2022\"\u003eZhang2022\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eVAP\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e3\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Guo2023\"\u003eGuo2023\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e4\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Li2024\"\u003eLi2024\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;(without CS)\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eboth\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e5\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Jiang2024\"\u003eJiang2024\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e6\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#He2022\"\u003eHe2022\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e7\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Yan2023\"\u003eYan2023\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2753;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e8\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Zhao2023\"\u003eZhao2023\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e9\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Fan2020\"\u003eFan2020\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e10\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Cui2020\"\u003eCui2020\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eboth\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e11\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Yang2023\"\u003eYang2023\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e12\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Gan2023\"\u003eGan2023\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e13\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Hou2024\"\u003eHou2024\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eboth\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e14\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Jiang2022\"\u003eJiang2022\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd style=\"text-align: center\"\u003e15\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u003ca href=\"/post/research/blockchainaccess_abe/#Guo2023\"\u003eGuo2023\u003c/a\u003e\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x2705;\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003e\u0026#x274c;\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch1 id=\"span-idxiao2022blockchain-based-multi-authority-fine-grained-access-control-system-with-flexible-revocationspan\"\u003e\u003cspan id=\"Xiao2022\"\u003eBlockchain Based Multi-Authority Fine-Grained Access Control System With Flexible Revocation\u003c/span\u003e\u003c/h1\u003e\n\u003cblockquote\u003e\n\u003cp\u003eMeiyan Xiao , Qiong Huang , Member, IEEE, Ying Miao, Shunpeng Li, and Willy Susilo , Fellow, IEEE;\nIEEE TRANSACTIONS ON SERVICES COMPUTING (TSC \u003cstrong\u003eCCF A\u003c/strong\u003e) 2022\u003c/p\u003e","title":"Blockchain-based access control"},{"content":"1. Generate crypto material for new peer Modify the script test-network/organizations/fabric-ca/registerEnroll.sh to add the configuration of peer1:\ninfoln \u0026#34;Registering peer1\u0026#34; set -x fabric-ca-client register --caname ca-org1 --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem { set +x; } 2\u0026gt;/dev/null infoln \u0026#34;Generating the peer1 msp\u0026#34; set -x fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-org1 -M ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp --csr.hosts peer1.org1.example.com --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem { set +x; } 2\u0026gt;/dev/null cp ${PWD}/organizations/peerOrganizations/org1.example.com/msp/config.yaml ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/config.yaml infoln \u0026#34;Generating the peer1-tls certificates\u0026#34; set -x fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-org1 -M ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls --enrollment.profile tls --csr.hosts peer1.org1.example.com --csr.hosts localhost --tls.certfiles ${PWD}/organizations/fabric-ca/org1/tls-cert.pem { set +x; } 2\u0026gt;/dev/null cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/signcerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.crt cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/keystore/* ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.key cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/msp/tlscacerts/ca.crt cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/tlscacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem cp ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/cacerts/* ${PWD}/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem Then, we can see that the MSP files of peer1 are generated in test-network/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp. These files identify the identity of peer1.\n2. Add the docker-compose configuration of the new peer to create a new container Add the configuration to file test-network/docker/docker-compose-test-net.yaml:\npeer1.org1.example.com: container_name: peer1.org1.example.com image: hyperledger/fabric-peer:latest environment: #Generic peer variables - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=fabric_test - FABRIC_LOGGING_SPEC=INFO #- FABRIC_LOGGING_SPEC=DEBUG - CORE_PEER_TLS_ENABLED=true - CORE_PEER_PROFILE_ENABLED=true - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt # Peer specific variabes - CORE_PEER_ID=peer1.org1.example.com - CORE_PEER_ADDRESS=peer1.org1.example.com:8051 - CORE_PEER_LISTENADDRESS=0.0.0.0:8051 - CORE_PEER_CHAINCODEADDRESS=peer1.org1.example.com:8052 - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052 - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:8051 - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:8051 - CORE_PEER_LOCALMSPID=Org1MSP # - CORE_OPERATIONS_LISTENADDRESS=peer1.org1.example.com:9444 volumes: - /var/run/docker.sock:/host/var/run/docker.sock - ../organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp - ../organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/fabric/tls - peer1.org1.example.com:/var/hyperledger/production working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer command: peer node start ports: - 8051:8051 # - 9444:9444 networks: - test cli: ... depends_on: ... - peer1.org1.example.com ... 3. Joining peer1 in channel and install chaincode on peer1 Up to now, the new peer node peer1 has been created. However, peer1 is not contained in the channel. So, we need to join peer1 in the channel and then install chaincode on it.\n# Add peer1 CORE_PEER_ADDRESS=localhost:8051 peer channel join -b channel-artifacts/mychannel.block # Install chaincode on peer1 CORE_PEER_ADDRESS=localhost:8051 peer lifecycle chaincode install liang.tar.gz OK, we are successful!\n","permalink":"https://liang512.github.io/post/hyperledgerfabric/addpeer/","summary":"\u003ch3 id=\"1-generate-crypto-material-for-new-peer\"\u003e1. Generate crypto material for new peer\u003c/h3\u003e\n\u003cp\u003eModify the script \u003ccode\u003etest-network/organizations/fabric-ca/registerEnroll.sh\u003c/code\u003e to add the configuration of peer1:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einfoln \u003cspan class=\"s2\"\u003e\u0026#34;Registering peer1\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e -x\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  fabric-ca-client register --caname ca-org1 --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/fabric-ca/org1/tls-cert.pem\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eset\u003c/span\u003e +x\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e 2\u0026gt;/dev/null\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003einfoln \u003cspan class=\"s2\"\u003e\u0026#34;Generating the peer1 msp\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e -x\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-org1 -M \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp --csr.hosts peer1.org1.example.com --tls.certfiles \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/fabric-ca/org1/tls-cert.pem\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eset\u003c/span\u003e +x\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e 2\u0026gt;/dev/null\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/msp/config.yaml \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/config.yaml\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  infoln \u003cspan class=\"s2\"\u003e\u0026#34;Generating the peer1-tls certificates\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"nb\"\u003eset\u003c/span\u003e -x\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-org1 -M \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls --enrollment.profile tls --csr.hosts peer1.org1.example.com --csr.hosts localhost --tls.certfiles \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/fabric-ca/org1/tls-cert.pem\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"o\"\u003e{\u003c/span\u003e \u003cspan class=\"nb\"\u003eset\u003c/span\u003e +x\u003cspan class=\"p\"\u003e;\u003c/span\u003e \u003cspan class=\"o\"\u003e}\u003c/span\u003e 2\u0026gt;/dev/null\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/tlscacerts/* \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/signcerts/* \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.crt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/keystore/* \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.key\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/tlscacerts/* \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/msp/tlscacerts/ca.crt\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/tlscacerts/* \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/tlsca/tlsca.org1.example.com-cert.pem\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  cp \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp/cacerts/* \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003ePWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/organizations/peerOrganizations/org1.example.com/ca/ca.org1.example.com-cert.pem\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThen, we can see that the MSP files of peer1 are generated in \u003ccode\u003etest-network/organizations/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp\u003c/code\u003e. These files identify the identity of peer1.\u003c/p\u003e","title":"Add a Peer Node to an Organization"},{"content":"1 Attribute vector $v$ -\u0026gt; $g^v$ Policy vector $x$ -\u0026gt; $rx$, where $r\\leftarrow Z_p$ Verify $g^{v\\cdot rx}=g^0$ System Model Requester is semi-honest, which means that they honestly perform protocol but may attempt to learn the privacy of other users.\nWorker may claim the honest CS doesn\u0026rsquo;t return correct matching tasks. 想要申请自己不满足任务需求的任务，栽赃服务器返回了错误的结果； keyword; collude\nServer：为了节省算力返回错误的匹配结果;篡改密文\npublic verifiable outsourced ABE: Worker 拒绝任务后可通过proof验证 Server进行了正确匹配；\nVerifiability: 对于Worker是否满足Requester制定的访问策略，可将双方的属性向量（任务访问策略向量）秘密共享or使用同态commitment：\n对向量$v=(v_0,v_1,v_2)$: Authority授权密钥时声称向量对应位置的commitment。如$AU_0$计算$Com(v_0)=g^{v_0}h^{r_0}$，最后将$Coms=(Com(v_0), Com(v_1), Com(v_2))$发送到区块链存储。 对向量$x(x_0,x_1,x_2)$: 利用Two-party secret sharing，首先Requester对$x$进行两方的加法秘密共享$x_0 = x_0^1+x_0^2$\u0026hellip; 验证：$Com(v_0,r_0)^{x_0^1}\\cdot Com(v_0,r_0)^{x_0^2}=Com(v_0\\cdot x_0,r_0\\cdot x_0)$ $\\prod \\limits_{i=0}^2 Com(v_i x_i)=Com(0)$ 忽略了随机数r ，$Com(v_0,r_0)^{x_0^1}\\cdot Com(v_0,r_0)^{x_0^2}=Com(v_0\\cdot x_0,r_0\\cdot x_0)$ $\\prod \\limits_{i=0}^2 Com(v_i x_i)=g^{v\\cdot x}h^{\\sum \\limits_{i=0}^n r_i\\cdot x_i}=g^0\\cdot h^{{\\sum \\limits_{i=0}^n r_i\\cdot x_i}}$ 对于Worker是否满足Requester制定的访问策略，可将双方的属性向量（任务访问策略向量）秘密共享or使用同态commitment：\n对向量$v=(v_0,v_1,v_2)$: Authority授权密钥时声称向量对应位置的commitment。如$AU_0$计算$Com(v_0)=g^{v_0}h^{r_0}$，最后将$Coms=(Com(v_0), Com(v_1), Com(v_2))$发送到区块链存储。 对向量$x(x_0,x_1,x_2)$: 利用Two-party secret sharing，首先Requester对$x$进行两方的加法秘密共享$x_0 = x_0^1+x_0^2$\u0026hellip; 验证：$Com(v_0)^{x_0^1}\\cdot Com(v_0)^{x_0^2}=Com(v_0\\cdot x_0)$ $\\prod \\limits_{i=0}^2 Com(v_i x_i)=Com(0)$ 忽略了随机数r ，$Com(v_0,r_0)^{x_0^1}\\cdot Com(v_0,r_0)^{x_0^2}=Com(v_0\\cdot x_0,r_0\\cdot x_0)$ $\\prod \\limits_{i=0}^2 Com(v_i x_i)=g^{v\\cdot x}h^{\\sum \\limits_{i=0}^n r_i\\cdot x_i}=g^0\\cdot h^{{\\sum \\limits_{i=0}^n r_i\\cdot x_i}}$ Fog nodes: semi-honest\nmulti-authority ABE\n可验证： anyone can verify matching result whether correct\nTwo parts:\nWorker是否有权限，Worker的属性是否满足任务需求，即是否满足属性加密谓词。 Keyword是否包含在匹配结果中，即Trapdoor是否match密文。 private verification：\nWorker自己执行一遍解密，需要配合签名或者哈希判断解密结果是否正确。 如果Match，Worker在本地执行一遍Search算法; 如果返回没有Match的密文😩，Worker对所有密文解密得到对应密文的Bloom filter，然后判断搜索的关键字是否包含在Bloom Filter。 public verification： 不能公布Bloom filter；验证要是高效的：不能比重新执行一遍Search算法消耗还多；\n直接将Search算法中的中间变量公开，Public verifier只需进行乘法；同时验证了Two parts；但是，如果服务器公布错误的值，也会通过verify。存在的问题：服务器可能公布错误的值。。。。加密另一个消息并公布哈希值，然后用$e_1$解密，判断是否相等，以此来验证$e_1$是否正确。 20240131 Bug：\n$e(g_1^{\\sigma_uA^\\top U}, g_2^{y_{u,2}h/\\sigma_u})=e(g_1,g_2)^{y_{u,2}hA^\\top U}$ 提前将随机数$\\sigma$消掉 The CS checks wether the following equation is holds: $$e(g_1,g_2)^{y_{u,2}hA^\\top U}=e(g_1,g_2)^{(k-y_{u,1})hA^\\top U}$$ If the equation holds, then CS can claim $y_u=k$. cs没有返回全部结果 Solutions:\n扩大$k$的取值范围\n使用韦达定理 $k\\in\\mathbb{Z^+}$ 需要用户自己计算属性向量，为了抵御恶意用户申请错误的密钥，改为单机构才可以 用户撤销、外包部分解密 \u0026hellip;\n20240729 Search Trapdoor: ${t_1=\\alpha_i^{r}, t_2=\\alpha_i^{ry}}$ ($\\alpha_i$ is secret key)\nCS performs partial decryption to get ${C\u0026rsquo;=Y_w^{sr}, $C\u0026rsquo;\u0026rsquo;=Y_w^{sry}, C_0=k\u0026rsquo;\\cdot Y_w^s}$\nWorker obtains task encryption key by $\\frac{C_0}{C\u0026rsquo;^{\\frac{1}{r}}}=\\frac{k\u0026rsquo;\\cdot Y_w^s}{Y_w^s}=k\u0026rsquo;$.\nPublic verifiability for ciphertext outsourcing decryption:\nIf the worker denies the output of the outsourced decryption by CS:\nThe worker publishes $y$ to the blockchain for verification.\nVerifiers check the following situations:\nIf $t_1^y=t_2$ and $C\u0026rsquo;^y=C\u0026rsquo;\u0026rsquo;$, then CS transforms the ciphertext correctly. If $t_1^y=t_2$ and $C\u0026rsquo;^y\\neq C\u0026rsquo;\u0026rsquo;$, then CS transforms the ciphertext incorrectly. If $t_1^y\\neq t _2$, then the search trapdoor is invalid. Security:\n$t_1$ and $t_2$ do not leak any information about $\\alpha_i$. Error\nIf CS directly outputs $C\u0026rsquo;=e(t_1,g), C\u0026rsquo;\u0026rsquo;=e(t_2,g)$, then $C\u0026rsquo;^y=C\u0026rsquo;\u0026rsquo;$ also holds. In this case, CS did not transform the ciphertext correctly, but still passed the verification.\n20241020 让sanitizer去审查DO发送的密文是否正确（密文中的访问策略是否和他声明的一样），需要将访问策略暴露给sanitizer 将访问策略以明文的方式输入TEE，之后只输出final ciphertext进行隐藏访问策略，敌手不能将访问策略和final ciphertext联系起来 ","permalink":"https://liang512.github.io/post/research/scheme/","summary":"\u003ch1 id=\"1\"\u003e1\u003c/h1\u003e\n\u003cul\u003e\n\u003cli\u003eAttribute vector $v$ -\u0026gt; $g^v$\u003c/li\u003e\n\u003cli\u003ePolicy vector $x$ -\u0026gt; $rx$, where $r\\leftarrow Z_p$\u003c/li\u003e\n\u003cli\u003eVerify $g^{v\\cdot rx}=g^0$\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"system-model\"\u003eSystem Model\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003eRequester is \u003cstrong\u003esemi-honest\u003c/strong\u003e, which means that they honestly perform protocol but may attempt to learn the privacy of other users.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eWorker may claim the honest CS doesn\u0026rsquo;t return correct matching tasks.\n想要申请自己不满足任务需求的任务，栽赃服务器返回了错误的结果； keyword; collude\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eServer：为了节省算力返回错误的匹配结果;篡改密文\u003c/p\u003e\n\u003cp\u003epublic verifiable outsourced ABE: Worker 拒绝任务后可通过proof验证 Server进行了正确匹配；\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch1 id=\"verifiability\"\u003eVerifiability:\u003c/h1\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e对于Worker是否满足Requester制定的访问策略，可将双方的属性向量（任务访问策略向量）秘密共享or使用同态commitment：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对向量$v=(v_0,v_1,v_2)$: Authority授权密钥时声称向量对应位置的commitment。如$AU_0$计算$Com(v_0)=g^{v_0}h^{r_0}$，最后将$Coms=(Com(v_0), Com(v_1), Com(v_2))$发送到区块链存储。\u003c/li\u003e\n\u003cli\u003e对向量$x(x_0,x_1,x_2)$: 利用Two-party secret sharing，首先Requester对$x$进行两方的加法秘密共享$x_0 = x_0^1+x_0^2$\u0026hellip;\u003c/li\u003e\n\u003cli\u003e验证：\u003cstrong\u003e$Com(v_0,r_0)^{x_0^1}\\cdot Com(v_0,r_0)^{x_0^2}=Com(v_0\\cdot x_0,r_0\\cdot x_0)$\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003e$\\prod \\limits_{i=0}^2 Com(v_i x_i)=Com(0)$\u003c/li\u003e\n\u003cli\u003e\u003cfont color=\"red\"\u003e忽略了随机数r\u003c/font\u003e ，$Com(v_0,r_0)^{x_0^1}\\cdot Com(v_0,r_0)^{x_0^2}=Com(v_0\\cdot x_0,r_0\\cdot x_0)$\u003c/li\u003e\n\u003cli\u003e$\\prod \\limits_{i=0}^2 Com(v_i x_i)=g^{v\\cdot x}h^{\\sum \\limits_{i=0}^n r_i\\cdot x_i}=g^0\\cdot h^{{\\sum \\limits_{i=0}^n r_i\\cdot x_i}}$\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e对于Worker是否满足Requester制定的访问策略，可将双方的属性向量（任务访问策略向量）秘密共享or使用同态commitment：\u003c/p\u003e","title":"Scheme"},{"content":" Sanitizable Access Control System for Secure Cloud Storage Against Malicious Data Publishers 1 这篇文章考虑加密者（Data Owner,DO）恶意的情况时，如何保证数据的隐私性。\n我们首先要清楚恶意的DO会做什么事情：\n嵌入错误的访问策略让无权限的用户解密；\n将密钥泄露给无权限的用户；\n对以上的1，增加一个可信的Sanitizer在密文上执行check操作，检查是否嵌入了正确的访问策略，其实相当于执行了一遍ABE的解密操作，将与访问策略$M$关联的密文组件与随机选择的属性集合$S\\in M$对应的密钥（这个密钥并不是authority生成，而是sanitizer按照密钥形式仿造的，仅为了验证）配对,通过验证则为正确的密文，此时的密文解密需要恢复出$e(g,g)^{\\alpha s}$；\n通过上述访问策略验证后，还需考虑DO直接将加密密钥泄露给无权限的用户。可信的sanitizer重新生成一个密文(访问策略秘密值为$s\\prime$)，然后将两个密文聚合在一起，此时的密文解密需要恢复出$e(g,g)^{\\alpha (s+s\u0026rsquo;)}$；\n问题：\n对以上的1，随机选择的属性集合$S$满足访问策略是否可以确定密文就正确：例如DO声称访问策略为M=\u0026ldquo;A\u0026rdquo;，但是在加密时使用错误的访问策略$M\u0026rsquo;$=\u0026ldquo;A or B\u0026rdquo;，在check时随机选择的属性集合为${ A }$，也可以通过验证，但是此时携带有属性B的私钥的用户也可以解密。并未解决第一个问题。 泄漏访问策略，不具备匿名性 Sanitizable Cross-System Authorization for Secure Communication in Intelligent Connected Vehicle 2 对IBE的密文，可以解决第一个问题 A Sanitizable Access Control With Policy-Protection for Vehicular Social Networks 3 访问策略是AND-Gate，可以解决第一个问题 Verifiable Outsourced Attribute-Based Encryption Scheme for Cloud-Assisted Mobile E-health System 4 将外包加密与这个场景结合，服务器需要将访问策略嵌入密文，sanitizer检测服务器输出的密文是否正确，这个应用场景比上面那个更贴切生活一些。\ncheck密文时仍然存在和第一篇一样的问题 访问策略的泄漏 Secure and Fine-Grained Flow Control for Subscription-Based Data Services Access control encryption based on KP-ABE.\n泄漏属性集合 Fine-Grained and Sanitizable Access Control Service for IoT-Based Digital Subscriptions 泄漏访问策略 Bilateral Control for Secure Communication against Replay Attack in ORAN-based Vehicular Networks checking 公式有错误？\nConclusion Check的本质思想就是执行了一遍解密操作，并未将消息解密出来 Sanitizing的关键思想就是给密文重新绑定另一个密文，另一个密文组件一定是可信生成的 基于ABE的都需要将密文的访问策略（CP-ABE）或者属性集合（KP-ABE）发送给sanitizer，直接导致隐私泄漏 Reference W. Susilo, P. Jiang, J. Lai, F. Guo, G. Yang and R. H. Deng, \u0026ldquo;Sanitizable Access Control System for Secure Cloud Storage Against Malicious Data Publishers,\u0026rdquo; in IEEE Transactions on Dependable and Secure Computing, vol. 19, no. 3, pp. 2138-2148, 1 May-June 2022, doi: 10.1109/TDSC.2021.3058132.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nY. Zhao, H. Yu, Y. Liang, H. Jiang, G. Marine and Y. Ren, \u0026ldquo;Sanitizable Cross-System Authorization for Secure Communication in Intelligent Connected Vehicle,\u0026rdquo; in IEEE Transactions on Vehicular Technology, doi: 10.1109/TVT.2023.3287569.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nY. Zhao, H. Yu, Y. Liang, M. Conti, W. Bazzi and Y. Ren, \u0026ldquo;A Sanitizable Access Control With Policy-Protection for Vehicular Social Networks,\u0026rdquo; in IEEE Transactions on Intelligent Transportation Systems, doi: 10.1109/TITS.2023.3285623.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nY. Miao et al., \u0026ldquo;Verifiable Outsourced Attribute-Based Encryption Scheme for Cloud-Assisted Mobile E-health System,\u0026rdquo; in IEEE Transactions on Dependable and Secure Computing, doi: 10.1109/TDSC.2023.3292129.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://liang512.github.io/post/sanitizable_abe/sanitizableencryption/","summary":"\u003ch1 id=\"cite-sanitizable-access-control-system-for-secure-cloud-storage-against-malicious-data-publishers-susilo2021cite\"\u003e\u003ccite\u003e Sanitizable Access Control System for Secure Cloud Storage Against Malicious Data Publishers \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/h1\u003e\n\u003cp\u003e这篇文章考虑加密者（Data Owner,DO）恶意的情况时，如何保证数据的隐私性。\u003c/p\u003e\n\u003cp\u003e我们首先要清楚恶意的DO会做什么事情：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e嵌入错误的访问策略让无权限的用户解密；\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e将密钥泄露给无权限的用户；\u003c/p\u003e\n\u003cp\u003e\u003cimg loading=\"lazy\" src=\"../image.png\" alt=\"check\"  /\u003e\n\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e对以上的1，增加一个可信的Sanitizer在密文上执行check操作，检查是否嵌入了正确的访问策略，其实相当于执行了一遍ABE的解密操作，将与访问策略$M$关联的密文组件与\u003cstrong\u003e随机选择\u003c/strong\u003e的属性集合$S\\in M$对应的密钥（这个密钥并不是authority生成，而是sanitizer按照密钥形式仿造的，仅为了验证）配对,通过验证则为正确的密文，此时的密文解密需要恢复出$e(g,g)^{\\alpha s}$；\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e通过上述访问策略验证后，还需考虑DO直接将加密密钥泄露给无权限的用户。可信的sanitizer重新生成一个密文(访问策略秘密值为$s\\prime$)，然后将两个密文聚合在一起，此时的密文解密需要恢复出$e(g,g)^{\\alpha (s+s\u0026rsquo;)}$；\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e\u003cstrong\u003e问题：\u003c/strong\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e对以上的1，随机选择的属性集合$S$满足访问策略是否可以确定密文就正确：例如DO声称访问策略为M=\u0026ldquo;A\u0026rdquo;，但是在加密时使用错误的访问策略$M\u0026rsquo;$=\u0026ldquo;A or B\u0026rdquo;，在check时随机选择的属性集合为${ A }$，也可以通过验证，但是此时携带有属性B的私钥的用户也可以解密。\u003cstrong\u003e并未解决第一个问题\u003c/strong\u003e。\u003c/li\u003e\n\u003cli\u003e泄漏访问策略，不具备匿名性\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"cite-sanitizable-cross-system-authorization-for-secure-communication-in-intelligent-connected-vehicle-zhao2023cite\"\u003e\u003ccite\u003e Sanitizable Cross-System Authorization for Secure Communication in Intelligent Connected Vehicle \u003csup id=\"fnref:2\"\u003e\u003ca href=\"#fn:2\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e2\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/h1\u003e\n\u003cp\u003e对IBE的密文，可以解决第一个问题\n\u003cimg loading=\"lazy\" src=\"../image-1.png\" alt=\"check_1\"  /\u003e\n\u003c/p\u003e\n\u003ch1 id=\"citea-sanitizable-access-control-with-policy-protection-for-vehicular-social-networks-zhao2023acite\"\u003e\u003ccite\u003eA Sanitizable Access Control With Policy-Protection for Vehicular Social Networks \u003csup id=\"fnref:3\"\u003e\u003ca href=\"#fn:3\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e3\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/h1\u003e\n\u003cp\u003e访问策略是AND-Gate，可以解决第一个问题\n\u003cimg loading=\"lazy\" src=\"../image-2.png\" alt=\"check2\"  /\u003e\n\u003c/p\u003e\n\u003ch1 id=\"citeverifiable-outsourced-attribute-based-encryption-scheme-for-cloud-assisted-mobile-e-health-system-miao2023cite\"\u003e\u003ccite\u003eVerifiable Outsourced Attribute-Based Encryption Scheme for Cloud-Assisted Mobile E-health System \u003csup id=\"fnref:4\"\u003e\u003ca href=\"#fn:4\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e4\u003c/a\u003e\u003c/sup\u003e\u003c/cite\u003e\u003c/h1\u003e\n\u003cp\u003e将外包加密与这个场景结合，服务器需要将访问策略嵌入密文，sanitizer检测服务器输出的密文是否正确，这个应用场景比上面那个更贴切生活一些。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003echeck密文时仍然存在和第一篇一样的问题\u003c/li\u003e\n\u003cli\u003e访问策略的泄漏\n\u003cimg loading=\"lazy\" src=\"../image-miao-system.png\" alt=\"MiaoSystem\"  /\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch1 id=\"secure-and-fine-grained-flow-control-for-subscription-based-data-services\"\u003eSecure and Fine-Grained Flow Control for Subscription-Based Data Services\u003c/h1\u003e\n\u003cp\u003eAccess control encryption based on KP-ABE.\u003c/p\u003e","title":"Sanitizable Encryption"},{"content":"Keyword-based matching Proxy-Free Privacy-Preserving Task Matching with Efficient Revocation in Crowdsourcing 1 这篇文章提出了一个无需代理重加密的基于关键字的任务匹配模型，支持用户撤销。作者公布代码。\n基本模型是经典的基于可搜索加密的关键字匹配模型，之后加入了 Server-Local Revocation (SLR)，实现用户撤销的思想很简单：服务器维护一个撤销用户列表 Revocation List (RL)，当有用户离开系统时，将该用户的相关信息存入RL实现撤销，在每次执行匹配算法时，服务器会先验证改用户是否在RL在，如果在RL中，则此次搜索终止，如不在RL中，说明此次搜索合法，进行匹配操作。\n之后为了减少RL的存储开销，作者提出了Global Revocation (GR)，为密钥、密文、搜索陷门加入了版本号（version number），系统周期性地执行$ReKeyGen$算法，清空RL，重新生成公钥、主私钥和密文更新密钥（用来更新之前版本的密文），并为worker分发新的密钥。\n优点：撤销机制简单\n缺点：每次匹配均需进行两次pairing操作以检查用户权限；在 GR 中，密钥机构需要周期性地上线执行$ReKeyGen$算法，即使是在RL为空时？（作者没有考虑这一点）。\n思考：学习到了撤销机制的实现方法：维护撤销用户列表和版本号。\n\u0026#x1f4dd; Note: 写文章思路：先写出一个基础方案，之后进行扩展，本文在基础匹配方案上扩展了用户撤销机制。先写SLR，然后针对 SLR 中RL的存储开销问题，提出GR，让系统定期清空RL，引入版本号。\nABE Attribute-Based Encryption with Publicly Verifiable Outsourced Decryption Transform算法输出的不是ElGamal形式的密文，而是把中间计算过程中的配对值输出。 验证者通过 sampling technique 随机选择pairing results进行验证。 Achieving public verification by combining sampling technique and game theory.\nMulti-Keyword Searchable and Verifiable Attribute-Based Encryption Over Cloud Data 只支持合取的关键字查询；需要公布一个关键字集合之间的映射；使用签名验证密文的complete； 是否可以做多关键字的检索 without bilinear pairing ?\nTrustAccess: A Trustworthy Secure Ciphertext-Policy and Attribute Hiding Access Control Scheme based on Blockchain 对向量使用ElGamal算法加密，利用同态性质验证向量内积为0； 属性向量$v$中有有一维是1，那么$h^r$就暴露了，别的$v$是否就能求出？ Access policy使用polynomial编码 -\u0026gt; hidden policy\nRegistered Attribute-Based Encryption (RABE) size of CRS quadratic in L time of registration linear in L\u0026mdash;-slow size of mpk, hdk and time of enc, dec polylogarithmically with L\nMain Contribution: resolve leakage of master secret key (msk) problem.\nlimitations:\nExist priori bound L on the number of users in the system Trusted output CRS Task Assignment Bid-based Personalized Location Privacy Trading in Double Auction for Mobile Crowdsensing 保护用户位置隐私\nTruthful Online Double Auctions for Mobile Crowdsourcing: An On-Demand Service Strategy 不保护bid\nTruthful online double auctions for dynamic mobile crowdsourcing 不保护bid\nEdge Resource Prediction and Auction for Distributed Spatial Crowdsourcing With Differential Privacy 采用非对称加密保护bid\nLocation-based Towards preserving worker location privacy in spatial crowdsourcing 2015 加法同态，在位置密文上进行运算比较来分配\nPriRadar: A Privacy-Preserving Framework for Spatial Crowdsourcing, 2020 利用属性加密，将位置经纬度设置为密文访问策略。且保护了任务内容\nProtecting Location Privacy of Users Based on Trajectory Obfuscation in Mobile Crowdsensing 2022 差分隐私\nRoPriv: Road Network-aware Privacy-preserving Framework in Spatial Crowdsourcing 2023 差分隐私\niTAM: Bilateral Privacy-Preserving Task Assignment for Mobile Crowdsensing 2021 minimize travel distance; Bilateral privacy includes task requirements and worker profiles; Paillier同态\nPrivacy-Preserving Online Task Assignment in Spatial Crowdsourcing: A Graph-based Approach 2022 差分隐私混淆位置\n@INPROCEEDINGS{9796827, author={Wang, Hengzhi and Wang, En and Yang, Yongjian and Wu, Jie and Dressler, Falko}, booktitle={IEEE INFOCOM 2022 - IEEE Conference on Computer Communications}, title={Privacy-Preserving Online Task Assignment in Spatial Crowdsourcing: A Graph-based Approach}, year={2022}, volume={}, number={}, pages={570-579}, doi={10.1109/INFOCOM48880.2022.9796827}} Keyword-based Secure Task Recommendation in Crowdsourcing 2016 利用可搜索加密以及代理重加密\nPrivacy-Preserving Task Recommendation Services for Crowdsourcing 2018 SSE 代理重加密 多关键字，使用多项式表示任务需求和工人兴趣\nAnonymous Privacy-Preserving Task Matching in Crowdsourcing 2018 SSE 代理加密，提供用户匿名性且可实现追踪和撤销\nPrivacy-Preserving Task Matching with Threshold Similarity Search via Vehicular Crowdsourcing 2021 SSE proxy re-encryption. 先基于关键字检索，然后根据位置筛选， 同时保护了关键字和位置\nPPTA: Privacy-Preserving Task Assignment Based on Inner-Product Functional Encryption in SAM 2023 Xu 同时保护关键字和位置\nPPTA: A location privacy-preserving and flexible task assignment service for spatial crowdsourcing 2023 Zhou 仅位置，使用两方的加法秘密共享,将工人位置和任务位置分别分割成两个秘密共享出去，但是安全性较弱，要求两个crowdsourcing server provider不合谋\nBlockchain-based Crowdsourcing Differentially Private Crowdsourcing With the Public and Private Blockchain identity and location\nTrustCom: 2020 Efficient Revocable Attribute-Based Encryption with Hidden Policies outsourced decryption, hidden policies and revocation support revocation: - update attribute group key and re-encrypt all ciphertext security proof 2021 White-Box Traceable Attribute-Based Encryption with Hidden Policies and Outsourced Decryption same authors for above paper add Algorithm $Trace, Revoke$ compare with Efficient Revocable Attribute-Based Encryption with Hidden Policies no security proof A Privacy-Enhanced Mobile Crowdsensing Strategy for Blockchain Empowered Internet of Medical Things This scheme classifies the uses by spectral clustering based on the social network. Therefore, the worker is assigned a specific task.\nPublicly Verifiable Inner Product Evaluation over Outsourced Data Streams under Multiple Keys 生成Proof需要向量明文，不可行\nSanIdea: Exploiting Secure Blockchain-Based Access Control via Sanitizable Encryption TIFS'24\nSanitize 后的密文没有用到，解密时直接忽略了前面Sanitize加的随机数，什么操作？Sanitize了个什么东西？\n将Authority的secret keys存储在区块链上？\u0026ndash; Introduction\nShu, Jiangang, et al. \u0026ldquo;Proxy-free privacy-preserving task matching with efficient revocation in crowdsourcing.\u0026rdquo; IEEE Transactions on Dependable and Secure Computing 18.1 (2018): 117-130.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","permalink":"https://liang512.github.io/post/papers/","summary":"\u003ch1 id=\"keyword-based-matching\"\u003eKeyword-based matching\u003c/h1\u003e\n\u003ch2 id=\"proxy-free-privacy-preserving-task-matching-with-efficient-revocation-in-crowdsourcing-1\"\u003eProxy-Free Privacy-Preserving Task Matching with Efficient Revocation in Crowdsourcing \u003csup id=\"fnref:1\"\u003e\u003ca href=\"#fn:1\" class=\"footnote-ref\" role=\"doc-noteref\"\u003e1\u003c/a\u003e\u003c/sup\u003e\u003c/h2\u003e\n\u003cp\u003e这篇文章提出了一个无需代理重加密的基于关键字的任务匹配模型，支持用户撤销。\u003ca href=\"https://github.com/jgshu/pMatch\"\u003e作者公布代码\u003c/a\u003e。\u003c/p\u003e\n\u003cp\u003e基本模型是经典的基于可搜索加密的关键字匹配模型，之后加入了 Server-Local Revocation (SLR)，实现用户撤销的思想很简单：服务器维护一个撤销用户列表 \u003cstrong\u003eRevocation List (RL)\u003c/strong\u003e，当有用户离开系统时，将该用户的相关信息存入RL实现撤销，在每次执行匹配算法时，服务器会先验证改用户是否在RL在，如果在RL中，则此次搜索终止，如不在RL中，说明此次搜索合法，进行匹配操作。\u003c/p\u003e\n\u003cp\u003e之后为了减少RL的存储开销，作者提出了Global Revocation (GR)，为密钥、密文、搜索陷门加入了\u003cstrong\u003e版本号（version number）\u003c/strong\u003e，系统周期性地执行$ReKeyGen$算法，清空RL，重新生成公钥、主私钥和密文更新密钥（用来更新之前版本的密文），并为worker分发新的密钥。\u003c/p\u003e\n\u003cp\u003e优点：撤销机制简单\u003c/p\u003e\n\u003cp\u003e缺点：每次匹配均需进行两次pairing操作以检查用户权限；在 GR 中，密钥机构需要周期性地上线执行$ReKeyGen$算法，即使是在RL为空时？（作者没有考虑这一点）。\u003c/p\u003e\n\u003cp\u003e思考：学习到了撤销机制的实现方法：维护撤销用户列表和版本号。\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026#x1f4dd; \u003cstrong\u003eNote:\u003c/strong\u003e 写文章思路：先写出一个基础方案，之后进行扩展，本文在基础匹配方案上扩展了用户撤销机制。先写SLR，然后针对 SLR 中RL的存储开销问题，提出GR，让系统定期清空RL，引入版本号。\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch1 id=\"abe\"\u003eABE\u003c/h1\u003e\n\u003ch2 id=\"attribute-based-encryption-with-publicly-verifiable-outsourced-decryption\"\u003eAttribute-Based Encryption with Publicly Verifiable Outsourced Decryption\u003c/h2\u003e\n\u003cp\u003eTransform算法输出的不是ElGamal形式的密文，而是把中间计算过程中的配对值输出。\n验证者通过 sampling technique 随机选择pairing results进行验证。\nAchieving public verification by combining sampling technique and game theory.\u003c/p\u003e\n\u003ch2 id=\"multi-keyword-searchable-and-verifiable-attribute-based-encryption-over-cloud-data\"\u003eMulti-Keyword Searchable and Verifiable Attribute-Based Encryption Over Cloud Data\u003c/h2\u003e\n\u003cp\u003e只支持合取的关键字查询；需要公布一个关键字集合之间的映射；使用签名验证密文的complete；\n是否可以做多关键字的检索 without bilinear pairing ?\u003c/p\u003e","title":"Papers"},{"content":"Implication The implication is important in mathematics. $\\phi$ implies $\\psi$ is denoted as $\\phi\\implies\\psi$, that means the truth of $\\psi$ follows from the truth of $\\phi$. And $\\phi$ is called antecedent and $\\psi$ is consequent. The truth table of $\\phi\\implies\\psi$ as follows:\n$\\phi$ $\\psi$ $\\phi\\implies\\psi$ T T T T F F F T T F F T The T denotes the truth and F denotes the false. A true conclusion from a true assumption, so the first row is true. If that implication is true, that means $\\psi$ would have to be T if $\\phi$ is T. So we cannot have $\\phi$ is T and $\\psi$ is F if $\\phi\\implies\\psi$ is T. Hence $\\phi\\implies\\psi$ must be F. We can look at \u0026ldquo;$\\phi$ does not imply $\\psi$\u0026rdquo; ($\\phi\\nRightarrow\\psi$) that is even through $\\phi$ is T, $\\psi$ is nevertheless F. So $\\phi\\nRightarrow\\psi$ is T if and only if $\\phi$ is T and $\\psi$ is F. In all other circumstances, $\\phi\\nRightarrow\\psi$ is F, which means $\\phi\\implies\\psi$ is T. So, the third and fourth rows are T. \u0026#x1f4dd; Note: The implication involves causality. For example, \u0026ldquo;$\\sqrt{2}$ is irrational\u0026rdquo; does not imply \u0026ldquo;$1+1=2$\u0026rdquo;, because this two statements has no relationship, they are independent of each other.\nEquivalence Two statements $\\phi$ and $\\psi$ are said to be equivalent if each implies the other. It is denoted $\\phi\\Leftrightarrow\\psi$ if $\\phi\\implies\\psi$ and $\\psi\\implies\\phi$. $\\phi\\Leftrightarrow\\psi$ is true if $\\phi$ and $\\psi$ are both true or both false.\n$\\phi$ $\\psi$ $\\phi\\implies\\psi$ $\\psi\\implies\\phi$ $\\phi\\Leftrightarrow\\psi$ T T T T T T F F T F F T T F F F F T F F Summary Assignment 4 Proof of modus ponens: The rule of logic stating that if a conditional statement ($\\phi\\land(\\phi\\implies\\psi)$) is accepted, and the antecedent ($\\phi$) holds, then the consequent ($\\psi$) may be inferred. $\\phi$ $\\psi$ $\\phi\\implies\\psi$ $\\phi\\land(\\phi\\implies\\psi)$ $[\\phi\\land(\\phi\\implies\\psi)]\\implies\\psi$ T T T T T T F F F T F T T F T F F T F T ","permalink":"https://liang512.github.io/post/mathematical_thinking_week2/","summary":"\u003ch1 id=\"implication\"\u003eImplication\u003c/h1\u003e\n\u003cp\u003eThe implication is important in mathematics. $\\phi$ implies $\\psi$ is denoted as $\\phi\\implies\\psi$, that means \u003cstrong\u003ethe truth of $\\psi$ follows from the truth of $\\phi$\u003c/strong\u003e. And $\\phi$ is called antecedent and $\\psi$ is consequent. The truth table of $\\phi\\implies\\psi$ as follows:\u003c/p\u003e\n\u003cdiv style=\"margin-left: auto;\n            margin-right: auto;\n            width: 40%\"\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003e$\\phi$\u003c/th\u003e\n          \u003cth\u003e$\\psi$\u003c/th\u003e\n          \u003cth style=\"text-align: center\"\u003e$\\phi\\implies\\psi$\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eT\u003c/td\u003e\n          \u003ctd\u003eT\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eT\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eT\u003c/td\u003e\n          \u003ctd\u003eF\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eF\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eF\u003c/td\u003e\n          \u003ctd\u003eT\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eT\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eF\u003c/td\u003e\n          \u003ctd\u003eF\u003c/td\u003e\n          \u003ctd style=\"text-align: center\"\u003eT\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003c/div\u003e\nThe T denotes the truth and F denotes the false.\n\u003col\u003e\n\u003cli\u003eA true conclusion from a true assumption, so the first row is true.\u003c/li\u003e\n\u003cli\u003eIf that implication is true, that means $\\psi$ would have to be T if $\\phi$ is T. So we cannot have $\\phi$ is T and $\\psi$ is F if $\\phi\\implies\\psi$ is T. Hence $\\phi\\implies\\psi$ must be F.\u003c/li\u003e\n\u003cli\u003eWe can look at \u0026ldquo;$\\phi$ does not imply $\\psi$\u0026rdquo; ($\\phi\\nRightarrow\\psi$) that is even through $\\phi$ is T, $\\psi$ is nevertheless F. So $\\phi\\nRightarrow\\psi$ is T if and only if $\\phi$ is T and $\\psi$ is F. In all other circumstances, $\\phi\\nRightarrow\\psi$ is F, which means $\\phi\\implies\\psi$ is T. So, the third and fourth rows are T.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026#x1f4dd; \u003cstrong\u003eNote:\u003c/strong\u003e The implication involves \u003cstrong\u003ecausality\u003c/strong\u003e. For example, \u0026ldquo;$\\sqrt{2}$ is irrational\u0026rdquo; does not imply \u0026ldquo;$1+1=2$\u0026rdquo;, because this two statements has no relationship, they are independent of each other.\u003c/p\u003e","title":"Introduction to Mathematical Thinking Week2"},{"content":"Introduction or Related Work A long line of constructions 1, 2 operates by \u0026hellip; There is no way to \u0026hellip; Our scheme resorts to (technique) as \u0026hellip; to \u0026hellip; (implement some functions) \u0026hellip; by harnessing the power of (technology). The starting point of this paper is that while the recent solutions consider and solve the bare-bones \u0026hellip; problem in its simplest form, there are several desirable features that they fail to achieve. This makes \u0026hellip; inherently vulnerable to \u0026hellip; attacks, \u0026hellip;, which bridges together the recent advancements of blockchain and cryptographic techniques. 强调重要性 it is of paramount importance to 技术赋能 \u0026hellip; is a new way of viewing \u0026hellip; which opens up a much larger world of possibilities for \u0026hellip;. The enhanced functionality and flexibility provided by \u0026hellip; is very appealing for many practical applications. 因果 due to in order to owing to attribute to ascribe to 缩写 w.r.t. : with reference to / with respect to / with regards to. i.e.: a shortening of the Latin expression id est, which translates to “that is” e.g.: for example\n词汇 vanilla/conventional public-key encryption 传统公钥加密 common impediment bottleneck 瓶颈 describe delineate demonstrate obliterate the privacy of encryption Multi-authority ABE In this case, the single third party controls and monitors all secret keys. Once it is corrupted, all secret keys will be leaked and any ciphertext is not secure anymore.\n","permalink":"https://liang512.github.io/post/research/goodwritingsentence/","summary":"\u003ch2 id=\"introduction-or-related-work\"\u003eIntroduction or Related Work\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eA long line of constructions 1, 2 operates by \u0026hellip;\u003c/li\u003e\n\u003cli\u003eThere is no way to \u0026hellip;\u003c/li\u003e\n\u003cli\u003eOur scheme resorts to (technique) as \u0026hellip; to \u0026hellip; (implement some functions)\u003c/li\u003e\n\u003cli\u003e\u0026hellip; by harnessing the power of (technology).\u003c/li\u003e\n\u003cli\u003eThe starting point of this paper is that while the recent solutions consider and solve the bare-bones \u0026hellip; problem in its simplest form, there are several desirable features that they fail to achieve.\u003c/li\u003e\n\u003cli\u003eThis makes \u0026hellip; inherently vulnerable to \u0026hellip; attacks,\u003c/li\u003e\n\u003cli\u003e\u0026hellip;, which bridges together the recent advancements of blockchain and cryptographic techniques.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"强调重要性\"\u003e强调重要性\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eit is of paramount importance to\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"技术赋能\"\u003e技术赋能\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u0026hellip; is a new way of viewing \u0026hellip; which opens up a much larger world of possibilities for \u0026hellip;.\u003c/li\u003e\n\u003cli\u003eThe enhanced functionality and flexibility provided by \u0026hellip; is very appealing for many practical applications.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"因果\"\u003e因果\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003edue to\u003c/li\u003e\n\u003cli\u003ein order to\u003c/li\u003e\n\u003cli\u003eowing to\u003c/li\u003e\n\u003cli\u003eattribute to\u003c/li\u003e\n\u003cli\u003eascribe to\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"缩写\"\u003e缩写\u003c/h2\u003e\n\u003cp\u003ew.r.t. : with reference to / with respect to / with regards to.\ni.e.: a shortening of the Latin expression id est, which translates to “\u003cstrong\u003ethat is\u003c/strong\u003e”\ne.g.: for example\u003c/p\u003e","title":"GoodWritingSentence"},{"content":"When I run the git push command, I get the error:\n1 2 3 $ git push origin main kex_exchange identification: Connection closed by remote host connection closed by 20.205.243.166 port 22 Next, I checked the ssh key I found the following output:\n1 2 3 $ ssh -T github.com kex_exchange identification: Connection closed by remote host connection closed by 20.205.243.166 port 22 I tried many solutions including changing the port to 443, turning off the VPN, and regenerating the ssh key, none of which worked.\nFinally, I found that I can\u0026rsquo;t successfully run the curl google.com command, but can successfully run the curl baidu.com command. I guess that my proxy has errors. However, the browser proxy is functioning normally, so I guess there\u0026rsquo;s something wrong with my terminal proxy.\nRun the following command:\n$ curl ipinfo.io Cities are shown in China. Now the problem is very clear, that is, the terminal proxy is not turned on.\nIf you use VPN, then the problem is most likely that you do not have a terminal proxy enabled.\nWhen I turned on the terminal proxy, the problem was successfully solved. I use the macOS system. In macOS, the success of the browser proxy does not mean the success of the terminal proxy. For example, my proxy port is 7890, I run the following command:\nexport https_proxy=http://127.0.0.1:7890 http_proxy=http://127.0.0.1:7890 all_proxy=socks5://127.0.0.1:7890 If you use oh-my-zsh, you can use the plugin zsh-osx-autoproxy to automatically set the terminal proxy.\ngit clone https://github.com/sukkaw/zsh-osx-autoproxy ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-osx-autoproxy echo \u0026#34;plugins+=(zsh-osx-autoproxy)\u0026#34; | tee -a .zshrc References https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/ ","permalink":"https://liang512.github.io/post/bugterminalproxy/","summary":"\u003cp\u003eWhen I run the \u003ccode\u003egit push\u003c/code\u003e command, I get the error:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ git push origin main \n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekex_exchange identification: Connection closed by remote host\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003econnection closed by 20.205.243.166 port 22\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eNext, I checked the ssh key I found the following output:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e$ ssh -T github.com\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekex_exchange identification: Connection closed by remote host\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003econnection closed by 20.205.243.166 port 22\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eI tried many solutions including changing the port to 443, turning off the VPN, and regenerating the ssh key, none of which worked.\u003c/p\u003e","title":"记录一个关于代理的小坑"},{"content":"《死亡诗社》(Dead Poets Society)拍摄于1989年，讲的是一位反传统的教师教学生诗歌、生活的故事。背景是在威尔顿预科学院这座传统学校，从这里毕业的学生都能申请到很好的大学，类似于我们的衡水中学，新来的教师 Keating 没有使用传统的教学方法，他教学生们解放思想，不局限于课本。\n第一堂课他带着学生去了著名校友墙，让他们聆听死者的声音，这些人当年多么风光，多么不可一世，现在也只存在于相片之中，固一世之雄也，而今安在哉？历史总是在不断重复，相片中的他们和自己很相像，不同的是我们还活着，我们还有无限可能，这时候Keating对他们说 Carpe diem，其意为 seize the day，很多人翻译为及时行乐，要过好每一天。\n最经典的桥段肯定是Keating在教室说出：\n\u0026ldquo;We don\u0026rsquo;t read and write poetry because it\u0026rsquo;s cute. We read and write poetry because we are members of the human race. And the human race is filled with passion. And medicine, law, business, engineering, these are noble pursuits and necessary to sustain life. But poetry, beauty, romance, love, these are what we stay alive for. \u0026quot;\n这里 sustain 这个词用的很好，可以翻译为维持，现在所学的很多东西都是用来维持生活，而 poetry, beauty, romance, love 是我们生活的意义所在。\n国内的教育很少会教一个人如何获得幸福的生活，只会教你谋生的技能，（仅限于我见到的），从幼儿园开始就有奥数，小学就开始了各种功课作业，上了初中就开始题海战术了，高中则更甚，一切以成绩为出发点，诚然，有的家长会让孩子学习音乐，而他们让孩子学习音乐处于什么目的呢？大部分依旧是比比比，抑或是让自己孩子以后在学校里出色一点，有几个是真正去让孩子去感受音乐的美呢？我们生活的社会太过功利，以至于无法静下心来感受美，稍微做一些与学习成绩、求职简历无关的事便被说成不务正业。\n给我印象最深的是Neil的自杀，他不想按照父亲安排的路走，自己很喜欢当演员，但家里却不理解，自己又一直是一个孝顺儿子的角色，最后在家里的压力下自杀了。其实Neil的家庭从一开始就有伏笔，他的父亲不允许他在公众场合和自己理论，不允许他参加对学习成绩没有帮助的报社，而Neil只有妥协，装出孝顺的模样。Neil的自杀是影片的高潮，让观众不由自主的想起 Carpe diem ，我们真的应该思考如何度过这一生，如何抓住每一天，去做自己喜欢的事，爱自己喜欢的人，尽量不留遗憾。\n关于这篇影片有很大的争议，有的人认为老师不应该在这个时候教容易动摇的学生去解放天性，诱人觉得让学生走向父母既定的道路才是最好的，会生活的更好。可以理解这种想法，不是每个人都能强大到能遵从内心的选择的，他们会屈服，他们会被生活打败。\n你可能没有别人聪明，没有别人有钱，没有别人成功，但这不影响你可以拥有幸福的生活。\n看到此博文的你大概率是工科生，我想对你说，光学好算法是过不好生活的，生活不应该只有理性的分析，更需要感性。这更是我想对自己说的。\n","permalink":"https://liang512.github.io/post/deadpoetssociety/","summary":"\u003cp\u003e《死亡诗社》(Dead Poets Society)拍摄于1989年，讲的是一位反传统的教师教学生诗歌、生活的故事。背景是在威尔顿预科学院这座传统学校，从这里毕业的学生都能申请到很好的大学，类似于我们的衡水中学，新来的教师 Keating 没有使用传统的教学方法，他教学生们解放思想，不局限于课本。\u003c/p\u003e\n\u003cp\u003e第一堂课他带着学生去了著名校友墙，让他们聆听死者的声音，这些人当年多么风光，多么不可一世，现在也只存在于相片之中，固一世之雄也，而今安在哉？历史总是在不断重复，相片中的他们和自己很相像，不同的是我们还活着，我们还有无限可能，这时候Keating对他们说 \u003cstrong\u003eCarpe diem\u003c/strong\u003e，其意为 \u003cstrong\u003eseize the day\u003c/strong\u003e，很多人翻译为及时行乐，要过好每一天。\u003c/p\u003e\n\u003cp\u003e最经典的桥段肯定是Keating在教室说出：\u003c/p\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;We don\u0026rsquo;t read and write poetry because it\u0026rsquo;s cute. We read and write poetry because we are members of the human race. And the human race is filled with passion. And medicine, law, business, engineering, these are noble pursuits and necessary to sustain life. But poetry, beauty, romance, love, these are what we stay alive for. \u0026quot;\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003cp\u003e这里 \u003cem\u003esustain\u003c/em\u003e 这个词用的很好，可以翻译为维持，现在所学的很多东西都是用来维持生活，而 \u003cem\u003epoetry, beauty, romance, love\u003c/em\u003e 是我们生活的意义所在。\u003c/p\u003e","title":"关于《死亡诗社》"},{"content":" Jucai Yang\n","permalink":"https://liang512.github.io/friends/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u003ca href=\"https://yangjucai.github.io/\"\u003eJucai Yang\u003c/a\u003e\u003c/p\u003e\n\u003c/blockquote\u003e","title":"Friends"},{"content":"This is my first blog. I\u0026rsquo;ve wanted to create a blog for a long time, but I didn\u0026rsquo;t realize it due to laziness. In this blog, I will share and record my life using English. Hope i can keep going.\nWell, now, I\u0026rsquo;m off to write the patent.\n","permalink":"https://liang512.github.io/post/first/","summary":"\u003cp\u003eThis is my first blog. I\u0026rsquo;ve wanted to create a blog for a long time, but I didn\u0026rsquo;t realize it due to laziness. In this blog, I will share and record my life using English. Hope i can keep going.\u003c/p\u003e\n\u003cp\u003eWell, now, I\u0026rsquo;m off to write the patent.\u003c/p\u003e","title":"First"},{"content":" My name is Liang Li. I am studying master degree. my research interests include data security and privacy protection, public key cryptography, blockchain and crowdsourcing. This is my first site. I\u0026rsquo;ve wanted to create a site for a long time, but I didn\u0026rsquo;t realize it due to laziness. In this site, I will record my life for myself (when my memory fails me).\nMy Hobbies (keep changing): Alone in a daze Close to nature Fiction (e.g., ) Romance of the Three Kingdoms \u0026hellip;\u0026hellip; ","permalink":"https://liang512.github.io/about/","summary":"\u003cblockquote\u003e\n\u003cp\u003eMy name is Liang Li. I am studying master degree. my research interests include \u003cstrong\u003edata security and privacy protection, public key cryptography, blockchain and crowdsourcing.\u003c/strong\u003e This is my first site. I\u0026rsquo;ve wanted to create a site for a long time, but I didn\u0026rsquo;t realize it due to laziness. In this site, I will record my life for myself (when my memory fails me).\u003c/p\u003e\n\u003c/blockquote\u003e\n\u003ch3 id=\"my-hobbies-keep-changing\"\u003eMy Hobbies (keep changing):\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAlone in a daze\u003c/li\u003e\n\u003cli\u003eClose to nature\u003c/li\u003e\n\u003cli\u003eFiction (e.g., )\u003c/li\u003e\n\u003cli\u003e\u003cem\u003eRomance of the Three Kingdoms\u003c/em\u003e\u003c/li\u003e\n\u003cli\u003e\u0026hellip;\u0026hellip;\u003c/li\u003e\n\u003c/ul\u003e","title":"About"},{"content":" github.com/nanxiaobei lee.so ","permalink":"https://liang512.github.io/contact/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/nanxiaobei\"\u003egithub.com/nanxiaobei\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://lee.so\"\u003elee.so\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Contact"},{"content":"1. Intro Hi, everyone. I\u0026rsquo;m Liang Li. It’s really a great pleasure to be here and I am very happy to introduce our paper: Bilateral Secure and Decentralized Crowdsourcing Task Matching Atop Consortium Blockchain. The co-authors include Haiqin Wu\u0026hellip;\n2. What is Crowdsourcing? First of all, we review what is crowdsourcing. Crowdsourcing relies on numerous people working collaboratively to solve complex problems. For example, a company wanting to collect weather data in Shanghai can recruit individuals to report weather conditions from various districts. This approach is cost-effective, fast, and creative compared to traditional outsourcing.\n3. Task Matching in Crowdsourcing Crowdsourcing involves three entities: the requester is a task owner who publishes tasks to the server for worker recruitment, and the worker is a task executor. The crowdsourcing server conducts the task matching.\nTask matching needs to assign tasks to qualified workers. In crowdsourcing, the requester first uploads the task information to CS, such as task content, task requirements, and task type. CS assigns task to a qualified worker according to requester-side task requirements or/and worker-side task preferences.\nTask matching should be correct, which means the matched worker actually meets the task requirements and the task meets the worker\u0026rsquo;s preferences. The matching algorithm also should be efficient. Furthermore, as we can see, the matching algorithm needs some sensitive information as input, and it is conducted on a dishonest server. The server may sell the user\u0026rsquo;s private information for profit. So, how to protect user privacy is important.\n4. Existing Solutions—Traditional Model In recent years, a line of work has been presented to solve the privacy leakage problem in task matching. The existing schemes mainly contain three types: auction-based, location-based, and keyword-based.\nThese models are only based on a single attribute to achieve task matching. These schemes require a cloud server assumed to be semi-honest.\nFor privacy, commonly used privacy protection techniques include Cryptographic commitment, hash function, encryption algorithm, and so on.\n5. Existing Solutions—based on Blockchain The dishonest centralized crowdsourcing suffers from the notorious single-point-of-failure and collusion attacks. It may lead to unreliable matching and insufficient privacy protection issues.\nTherefore, to solve these problems, blockchain-based crowdsourcing systems were proposed. Researchers use the properties of blockchain to build a decentralized crowdsourcing system.\nAnd, it\u0026rsquo;s easy to combine blockchain and crowdsourcing, we just replace the centralized server with smart contracts to achieve reliable task matching like this figure. Right, it sounds simple. However, this will bring new privacy leakage challenges due to the transparency of smart contracts.\n6. Limitations of the Existing Solutions In a word, the existing solutions have the following limitations: The matching model is oversimplified, which means most schemes are based on coarse-grained location or keyword and only consider one-party requirements and privacy. Additionally, although some schemes use the blockchain to replace the centralized server, these schemes are not really decentralized because there still exists a trusted entity for distributing user keys. Finally, the on-chain operation suffers from high overhead.\nTherefore, a decentralized crowdsourcing with dual-side privacy-preserving and flexible task matching is required.\n7. Contributions In our paper, we proposed a decentralized crowdsourcing system with no central trust and dual-side privacy-preserving task matching. We also achieved flexible task matching. Our scheme also achieves the correctness and public verifiability of matching results.\nNext, I will introduce the technical roadmap of our scheme.\n8. ABE First, I will introduce the main building block of our scheme, attribute-based encryption. ABE extends traditional public-key encryption to enable fine-grained access control to encrypted data. ABE has two variants: ciphertext-policy abe and key-policy abe. As in this PowerPoint, in ciphertext-policy abe, the Encryptor assigns an access policy f in ciphertext, and the decryption is successful if and only if the set of attributes of the Decryptor satisfies the access policy.\n9. Design Rationale of Our Scheme In our scheme, the requester uploads the task ciphertext to the blockchain with task requirements denoted by vector 𝑥. The worker retrieves the attribute key for vector 𝑣 from the authority and generates a search token using the TokenGen algorithm. The smart contract then performs the Search algorithm to match tasks if the inner product of 𝑣 and 𝑥 is 0 and the task and worker keywords match. Finally, the worker retrieves and decrypts the task ciphertext from the blockchain.\nThis ensures that both requester and worker data are protected by encryption and the search token algorithm. It allows flexible task matching based on specific requirements and keywords. The smart contract guarantees reliable and publicly verifiable results.\n10. Vector Generation Now, I will explain how to transform the task requirements and attributes to vectors. The AND-Gate access structure with wildcard is used in our scheme. In this access structure, each attribute has multiple possible values, the notation \u0026lsquo;+\u0026rsquo; denotes this value is positive, \u0026lsquo;-\u0026rsquo; denotes the opposite, and \u0026lsquo;*\u0026rsquo; denotes the don\u0026rsquo;t care attribute. For example, in this table, Alice is a teacher in the CS department of University A, and Alice satisfies access structure W2 rather than W1.\nWe compute the vectors x and v as these two formulas.\n11. Vector Generation—Example For easy understanding, we give an example. For Alice, the set $J$ of the positive attribute value is {1,4,6} and we set N equals 2. Then we compute $v$ in this way. V zero equals 1 to zero\u0026hellip; Then the vector $v$ equals (3,11,53,-1).\nFor access policy $W_2$, the positive attribute value set is Q and the wildcard attribute value set is P. Then we compute the vector x zero to x two and Gamma in this way.\nFinally, it is easy to check the inner product of v and x is zero.\n12. Pedersen Commitment Next, I will introduce a cryptographic commitment Pedersen Commitment, that allows one to generate a commitment to a message m without revealing m. At a later time, the commitment is opened by the sender to convince a receiver that the message is indeed m.\nThe commit algorithm takes as input a message m and a random element in $\\mathbb{Z}_p$ and outputs a commitment value com=$g^mh^r$.\nThe verify algorithm outputs 1 if com equals g to m times h to r, otherwise, outputs 0.\nWe utilize the homomorphic property of the Pedersen Commitment, which means the multiplication of commitment of $m_1$ and $m_2$ equals the commitment of $m_1+m_2$.\n13. Technique Overview Now I\u0026rsquo;d like to move on to the technique overview. Note that traditional ABE doesn\u0026rsquo;t have a keyword search algorithm. To enable keyword search, we design $TokenGen$ algorithm and $Search$ algorithm by adding $\\beta$-components to ciphertexts and search tokens.\nAnd then utilize the Viete formulas to generate policy and attribute vectors to reduce the ciphertext and key size.\nFinally, to resist malicious workers submitting incorrect attribute vectors, we design 𝑃𝑟𝑜𝑜𝑓𝐺𝑒𝑛 algorithm and 𝑃𝑟𝑜𝑜𝑓𝑉𝑒𝑟𝑖𝑓𝑦 algorithm based on Pedersen Commitment.\nAfter that, the whole process of task matching is given.\n14. System Initialization First, in system initialization, the setup and authsetup algorithms are performed to generate public parameters and authority\u0026rsquo;s public keys.\nIn the authority setup algorithm, we add the $\\beta$ components to enable later keyword search.\n15. User registration-1 Next, the worker computes his attribute vector v and sends it to the authority to get secret keys. To resist malicious workers submitting wrong vectors, authorities first perform proofGen for this worker. 𝐷 is worker’s attribute value managed by 𝐴𝑈_𝑖. 𝐴𝑈_𝑖 computes commitment for 𝐷 as this formula. Finally, the authority can perform proofverify algorithm to verify the vector.\nFor ease of understanding, we can see this example. Alice computes her vector as v. And then authorities compute the commitments of v as the table. For attribute 1, the commitments are in the first row, similarly, for attribute 4, the commitments are in the second row.\nAuthority can check the $v_3$ to satisfy this equation. we can conclude if the worker correctly computes v, then we have this equation for $v_1, v_2$, and $v_3$.\n16. User registration-2 After verification, the authority generates secret key for vector v as this formula. Notably, $key_{i1}$ will be used to generate search token.\n17. Task ciphertext uploading In this phase, requester encrypts the task and uploads it to blockchain for storage. Hybrid encryption is employed. The requester first selects a random symmetric key sk from $G_T$. And sk is encrypted by ABE with access policy x. In addition, this cipher also contains keyword-associated components: $C_1$ and $\\tilde{C}$.\n18. Search Token Generation The worker generates search token tk_v follows this way. We first compute $K\u0026rsquo;i=g_2^{t_i}\\cdot key{i,1}$, and the keyword-associated component $tok_1$. Then, upload $tk_v$ to blockchain for task matching.\n19. Reliable On-chain Task Matching After that, the smart contract conduct mathcing with tk_v and ct_x. First, the smart contract computes e_1, this formula is responsible for testing if the inner product of v and x equals 0. After that, task matching is successful if this equation holds. This equation is responsible for testing keyword relations.\nwe can see the left part and right part of this equation are the same if v times x equals 0 and keyword w equals w\u0026rsquo;. At this point, our task matching is completed\n20. Task Retrieval and Decryption Finally, the worker retrieves task cipher from blockchain and decrypts it to perform the task.\n21. Experiment Setting Next, let me briefly talk about the experimental performance.These are some experiment settings. the task matching is deployed on hyperledger fabric. And we use a test tool called Tape to simulate transactions.\n22. Off-chain These graphs show the off-chain performance, we tested the time overhead of each algorithm with different $N$. The overhead of algorithms is increasing with $N$ because of the number of time-consuming operations related to $N$. Our scheme has a reasonable overhead.\n23. On-chain-1 This is on-chain performance, Fig.(a) and fig.(b) show the throughput and latency of the task uploading phase and task matching with different N. Task matching is more time-consuming because it has more pairing operations. Moreover, our scheme is more efficient than a task-matching scheme DABTA.\n24. Summary Well, that concludes my presentation today, to refresh your memory, I\u0026rsquo;ll repeat the main points: we design a policy-hiding multi-authority searchable ABE. we discover keyword search based on traditional ABE and reduce the ciphertext and key size by utilizing viete\u0026rsquo;s formulas.\nSecondly, we proposed a decentralized crowdsourcing with no central trust and dual-side privacy-preserving and flexible task matching.\nFinally, we also give the security analysis of the scheme in the paper.\n25 Thanks for your attention. I am happy to answer any questions you might have.\n","permalink":"https://liang512.github.io/post/blockchain24/","summary":"\u003ch1 id=\"1-intro\"\u003e1. Intro\u003c/h1\u003e\n\u003cp\u003eHi, everyone. I\u0026rsquo;m Liang Li. It’s really a great pleasure to be here and I am very happy to introduce our paper: \u003cstrong\u003eBilateral Secure and Decentralized Crowdsourcing Task Matching Atop Consortium Blockchain.\u003c/strong\u003e The co-authors include Haiqin Wu\u0026hellip;\u003c/p\u003e\n\u003ch1 id=\"2-what-is-crowdsourcing\"\u003e2. What is Crowdsourcing?\u003c/h1\u003e\n\u003cp\u003eFirst of all, we review what is crowdsourcing.\nCrowdsourcing relies on numerous people working collaboratively to solve complex problems. For example, a company wanting to collect weather data in Shanghai can recruit individuals to report weather conditions from various districts. This approach is cost-effective, fast, and creative compared to traditional outsourcing.\u003c/p\u003e","title":""},{"content":"红楼梦第二十六回： 颦儿才貌世应希，独报幽芳出绣闺； 呜咽一声犹未了，落花满地鸟惊飞。 写人美竟能如此清新脱俗，做个注解倒显得俗气\n","permalink":"https://liang512.github.io/post/thestoryofthestone/idea/","summary":"\u003cp\u003e红楼梦第二十六回：\n颦儿才貌世应希，独报幽芳出绣闺；\n呜咽一声犹未了，落花满地鸟惊飞。\n写人美竟能如此清新脱俗，做个注解倒显得俗气\u003c/p\u003e","title":""}]